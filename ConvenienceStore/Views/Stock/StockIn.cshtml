@model List<ConvenienceStore.Models.InventoryItem>

@{
    ViewData["Title"] = "Stock In";
}

<div class="container-fluid py-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <div class="d-flex justify-content-between align-items-center">
                <h3 class="mb-0"><i class="bi bi-box-arrow-in-down me-2"></i>Stock In</h3>
                <a asp-controller="Home" asp-action="Index" class="btn btn-light btn-sm">
                    <i class="bi bi-arrow-left me-1"></i>Back to Stock
                </a>
            </div>
        </div>

        <div class="card-body">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success d-flex align-items-center" role="alert">
                    <i class="bi bi-check-circle-fill me-2"></i>
                    <div>@TempData["SuccessMessage"]</div>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger d-flex align-items-center" role="alert">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    <div>@TempData["ErrorMessage"]</div>
                </div>
            }

            <form asp-action="StockIn" method="post" class="needs-validation" novalidate>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="itemId" class="form-label">Select Item</label>
                        <select class="form-select" id="itemId" name="itemId" required>
                            <option value="" selected disabled>-- Select Item --</option>
                            @foreach (var item in Model)
                            {
                                <option value="@item.Id" data-max="@item.MaxStockQuantity">@item.Name (@item.Description)</option>
                            }
                        </select>
                        <div class="invalid-feedback">Please select an item</div>
                    </div>

                    <div class="col-md-6 mb-3">
                        <label for="quantity" class="form-label">Quantity</label>
                        <div class="input-group">
                            <input type="number" class="form-control" id="quantity" name="quantity" min="1" required>
                            <button class="btn btn-primary" type="submit">
                                <i class="bi bi-check-lg me-1"></i>Confirm Stock In
                            </button>
                            <div class="invalid-feedback">Please enter a valid quantity</div>
                        </div>
                        <small id="maxStockHelp" class="form-text text-muted d-none">Max stock: <span id="maxStockValue"></span></small>
                    </div>
                </div>
            </form>

            <div class="mt-4">
                <h5 class="mb-3">Current Stock Levels</h5>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Item</th>
                                <th>Description</th>
                                <th>Current Stock</th>
                                <th>Max Capacity</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@item.Name</td>
                                    <td>
                                        <span class="badge bg-secondary">@item.Description</span>
                                    </td>
                                    <td>
                                        <span class="@(item.CurrentStock == 0 ? "text-danger" : "")">
                                            @item.CurrentStock
                                        </span>
                                    </td>
                                    <td>@(item.MaxStockQuantity?.ToString() ?? "No limit")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Client-side validation
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })

            // Show max stock when item is selected
            const itemSelect = document.getElementById('itemId');
            const quantityInput = document.getElementById('quantity');
            const maxStockHelp = document.getElementById('maxStockHelp');
            const maxStockValue = document.getElementById('maxStockValue');

            itemSelect.addEventListener('change', function() {
                const selectedOption = this.options[this.selectedIndex];
                const maxStock = selectedOption.getAttribute('data-max');

                if (maxStock && maxStock !== '') {
                    maxStockHelp.classList.remove('d-none');
                    maxStockValue.textContent = maxStock;
                    quantityInput.max = maxStock;
                } else {
                    maxStockHelp.classList.add('d-none');
                    quantityInput.removeAttribute('max');
                }
            });
        })()
    </script>
}

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <style>
        .card {
            border-radius: 0.5rem;
            border: none;
        }

        .card-header {
            border-radius: 0.5rem 0.5rem 0 0 !important;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(13, 110, 253, 0.05);
        }

        .form-select, .form-control {
            padding: 0.5rem 1rem;
            border-radius: 0.375rem;
        }
    </style>
}






















@* @model List<ConvenienceStore.Models.InventoryItem> *@

@* @{ *@
@*     ViewData["Title"] = "Stock In"; *@
@* } *@

@* <h2>Stock In</h2> *@

@* @if (TempData["SuccessMessage"] != null) *@
@* { *@
@*     <div class="alert alert-success"> *@
@*         @TempData["SuccessMessage"] *@
@*     </div> *@
@* } *@

@* @if (TempData["ErrorMessage"] != null) *@
@* { *@
@*     <div class="alert alert-danger"> *@
@*         @TempData["ErrorMessage"] *@
@*     </div> *@
@* } *@

@* <form asp-action="StockIn" method="post"> *@
@*     <div class="form-group"> *@
@*         <label for="itemId">Select Item:</label> *@
@*         <select class="form-control" id="itemId" name="itemId" required> *@
@*             <option value="">-- Select Item --</option> *@
@*             @foreach (var item in Model) *@
@*             { *@
@*                 <option value="@item.Id">@item.Name (@item.Description)</option> *@
@*             } *@
@*         </select> *@
@*     </div> *@
@*     <div class="form-group"> *@
@*         <label for="quantity">Quantity:</label> *@
@*         <input type="number" class="form-control" id="quantity" name="quantity" min="1" required /> *@
@*     </div> *@
@*     <button type="submit" class="btn btn-primary">Stock In</button> *@
@*     <a asp-controller="Home" asp-action="Index" class="btn btn-secondary">Back to Stock</a> *@
@* </form> *@